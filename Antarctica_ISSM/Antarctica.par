% Parameters to change/Try
friction_coefficient = 5; % default [10]

%Name and Coordinate system
md.miscellaneous.name='Antarctica';
md.mesh.epsg=3031;

%NetCdf Loading
disp('   Loading SeaRISE data from NetCDF');
ncdata='./Antarctica_new_10ma.nc';
monthlydata='./MonthlyData_10ma.nc'
x1    = ncread(ncdata,'x1');
y1    = ncread(ncdata,'y1');
temp  = ncread(ncdata,'presartm');
prcp  = ncread(ncdata,'prcp');
monthlytemp = ncread(monthlydata,'presartm');
monthlytemp = permute(monthlytemp,[2 3 1]);
monthlyprcp   = ncread(monthlydata,'prcp');
monthlyprcp = permute(monthlyprcp,[2 3 1]);

% Geometry
disp('   Interpolating geometry');
md.geometry.surface = md.geometry.base;
md.geometry.thickness=md.geometry.surface-md.geometry.base
md.geometry.hydrostatic_ratio=ones(md.mesh.numberofvertices,1); %For Dakota

%Set min thickness to 1 meter
pos0=find(md.geometry.thickness<=1);
md.geometry.thickness(pos0)=1;
md.geometry.surface=md.geometry.base+md.geometry.thickness;
md.geometry.bed=md.geometry.base;

%Initialization parameters
disp('   Interpolating temperatures');
md.initialization.temperature=InterpFromGridToMesh(x1,y1,temp,md.mesh.x,md.mesh.y,0);

disp('   Set observed velocities')
md.initialization.vx=zeros(md.mesh.numberofvertices,1);
md.initialization.vy=zeros(md.mesh.numberofvertices,1);
md.initialization.vz=zeros(md.mesh.numberofvertices,1);
md.initialization.vel=zeros(md.mesh.numberofvertices,1);

disp('   Set Pressure');
md.initialization.pressure=md.materials.rho_ice*md.constants.g*md.geometry.thickness;

disp('   Construct ice rheological properties');
md.materials.rheology_n=3*ones(md.mesh.numberofelements,1);
md.materials.rheology_B=paterson(md.initialization.temperature);

% Positive dgree day
disp('   Creating & Interpolating surface mass balance');
md.smb=SMBpdd();
md.smb.s0p=zeros(md.mesh.numberofvertices,1);
md.smb.s0t=zeros(md.mesh.numberofvertices,1);

newtemp = zeros(md.mesh.numberofvertices,12);
for i = 1:12
	newtemp(:,i)=InterpFromGridToMesh(x1,y1,monthlytemp(:,:,i),md.mesh.x,md.mesh.y,0);
end
md.smb.monthlytemperatures = newtemp;
newprcp = zeros(md.mesh.numberofvertices,12);
for i = 1:12
	newprcp(:,i)=InterpFromGridToMesh(x1,y1,monthlyprcp(:,:,i),md.mesh.x,md.mesh.y,0);
end
md.smb.precipitation = newprcp;
clear prcp presartm newtemp newprcp;

disp('   Set boundary conditions');
md=SetMarineIceSheetBC(md);
md.basalforcings.groundedice_melting_rate = zeros(md.mesh.numberofvertices,1);
md.basalforcings.geothermalflux=zeros(md.mesh.numberofvertices,1);

% Control
md.inversion=m1qn3inversion();
md.inversion.vx_obs=md.initialization.vx;
md.inversion.vy_obs=md.initialization.vy;
md.inversion.vel_obs=md.initialization.vel;
md.inversion.maxsteps=20;
md.inversion.maxiter=40;
md.inversion.dxmin=0.1;
md.inversion.gttol=1.0e-4;
%md.verbose=verbose('control',true);
md.inversion.cost_functions=[101 103 501];
md.inversion.cost_functions_coefficients=ones(md.mesh.numberofvertices,3);
md.inversion.cost_functions_coefficients(:,1)=1;
md.inversion.cost_functions_coefficients(:,2)=1;
md.inversion.cost_functions_coefficients(:,3)=8e-15;
md.inversion.control_parameters={'FrictionCoefficient'};
md.inversion.min_parameters=1*ones(md.mesh.numberofvertices,1);
md.inversion.max_parameters=200*ones(md.mesh.numberofvertices,1);

% Thermal
md.thermal.spctemperature = [md.initialization.temperature;1];
md.initialization.watercolumn=zeros(md.mesh.numberofvertices,1);
md.initialization.waterfraction=zeros(md.mesh.numberofvertices,1);
md.thermal.isenthalpy = 1;

% Mass transport
md.masstransport.spcthickness = NaN*ones(md.mesh.numberofvertices,1);
md.masstransport.stabilization = 1

% Stress balance
disp('   Construct basal friction parameters');
md.friction.coefficient=friction_coefficient*ones(md.mesh.numberofvertices,1);
md.friction.p=ones(md.mesh.numberofelements,1);
md.friction.q=ones(md.mesh.numberofelements,1);
%md.stressbalance.maxiter = 2;
md.stressbalance.spcvx=NaN*ones(md.mesh.numberofvertices,1);
md.stressbalance.spcvy=NaN*ones(md.mesh.numberofvertices,1);
md.stressbalance.spcvz=NaN*ones(md.mesh.numberofvertices,1);
